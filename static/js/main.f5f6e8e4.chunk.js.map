{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Section/Section.jsx","redux/contacts/contactActions.jsx","components/Form/Form.jsx","redux/contacts/contactSelectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contactReduser.jsx","redux/store.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","configs","addContact","createAction","name","number","payload","id","unId","deleteContact","changeFilter","FormHooks","useState","setName","setNumber","dispatch","useDispatch","nameInputId","shortid","generate","numInputId","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","contactActions","htmlFor","formInput","placeholder","type","pattern","required","onChange","formBtn","getFilter","state","phoneBook","filter","getVisibleContacts","contacts","getContacts","normalizeContacts","toLowerCase","contact","includes","ContactsList","useSelector","contactList","map","contactItem","contactDescription","deleteBtn","onClick","onDeleteContact","Filter","label","filterInput","target","AppHooks","Form","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","createReducer","actions","find","toast","error","success","cont","_","action","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","configStore","persistore","persistStore","ReactDOM","render","loading","persistor","document","querySelector"],"mappings":"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","file":"static/js/main.f5f6e8e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\",\"contactDescription\":\"ContactsList_contactDescription__3l3Kl\",\"deleteBtn\":\"ContactsList_deleteBtn__9HgYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Form_formInput__7h6Ga\",\"formBtn\":\"Form_formBtn__6_XDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n// import { FcContacts } from 'react-icons/fc';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>\n        {title === 'Phonebook' }\n        {title}\n      </h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","\nimport { v4 as unId } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\n\nconst addContact = createAction('contacts/Add', ({ name, number }) => {\n  return {\n    payload: {\n      id: unId(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('contacts/Delete');\n\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nconst configs = {addContact, deleteContact, changeFilter}\n\n\n\nexport default configs;","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { useDispatch } from 'react-redux';\nimport contactActions from '../../redux/contacts/contactActions';\nimport s from './Form.module.css';\n// import { IoIosPersonAdd } from 'react-icons/io';\n\nconst FormHooks = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameInputId = shortid.generate();\n  const numInputId = shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactActions.addContact({ name, number }));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Name\"\n            id={nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor={numInputId}>\n          <input\n            className={s.formInput}\n            placeholder=\"Tel\"\n            id={numInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button className={s.formBtn} type=\"submit\">\n          {/* <IoIosPersonAdd className={s.icon} /> */}\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormHooks;","export const getContacts = state => state.phoneBook.contacts;\n\nexport const getFilter = state => state.phoneBook.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizeContacts = filter.toLowerCase();\n\n  return contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(normalizeContacts) ||\n      contact.number.includes(filter),\n  );\n};","import React from 'react';\nimport s from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '../../redux/contacts/contactActions';\nimport { getVisibleContacts } from '../../redux/contacts/contactSelectors';\n// import { IoIosContact } from 'react-icons/io';\n// import { TiDeleteOutline } from 'react-icons/ti';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(contactActions.deleteContact(id));\n\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactDescription}>\n            {/* <IoIosContact className={s.icon} /> */}\n            {name}: {number}\n          </p>\n          <button\n            className={s.deleteBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            {/* <TiDeleteOutline className={s.icon} /> */}\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactsList;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport { getFilter } from '../../redux/contacts/contactSelectors';\nimport contactActions from '../../redux/contacts/contactActions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.label}>\n      <input\n        className={s.filterInput}\n        placeholder=\"Find contacts by name\"\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;","import React from \"react\";\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Form/Form\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function AppHooks() {\n  return (\n    <div>\n      <Container>\n        <Section title=\"Phonebook\">\n          <Form />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactsList />\n        </Section>\n      </Container>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport actions from './contactActions';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\nconst addContact = (state, { payload }) => {\n  if (state.find(contact => contact.number === payload.number)) {\n    \n    toast.error(`🤷🏼‍♀️ '${payload.number}' is in your list`);\n    return state;\n  }\n  if (\n    state.find(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    )\n  ) {\n    toast.error(` 🤷🏼‍♀️ '${payload.name}' is in your list`);\n    return state;\n  }\n  toast.success(` ☎️ '${payload.name}' added to phonebook`);\n  return [...state, payload];\n};\n\nconst deleteContact = (state, { payload }) => {\n  toast(` 🗑 Contact deleted`);\n  return state.filter(cont => cont.id !== payload);\n};\n\nconst contacts = createReducer([], {\n  [actions.addContact]: addContact,\n  [actions.deleteContact]: deleteContact,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  contacts,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { logger } from 'redux-logger';\nimport contactsReducer from '../redux/contacts/contactReduser';\n\n\n\n\nconst contactsPersistConfig = {\n  key: 'phoneBook',\n  storage,\n  blacklist: ['filter'],\n};\n\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    phoneBook: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistore = persistStore(store);\n\nconst configStore ={store, persistore}\nexport default configStore;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistore}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}